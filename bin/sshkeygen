#!/usr/bin/perl -w

use strict;
use warnings;
use diagnostics;
use lib '/home/chicks/Documents/git/libtmux/lib'; # TODO: remove hack
use Term::TmuxExpect;

# slurp password out of unversioned file
my $password = `cat ~/.creds`;
chomp($password);

my @servers = @ARGV;

foreach my $target (@servers) {
	print "$target:\n";
	my $server = $target;
	$target =~ s/[.]/_/g;
	
	# Spawn window
	my $random = int(rand(1000));
	my $window_name = "${target}_${random}";
	system("tmux new-window -d -n $window_name");
	sleep 1; # TODO: sleep less?

	my $remote = new Term::TmuxExpect($window_name);

#	$remote->expect_last('^chicks.*[$]$'); # at a prompt

	# login
	$remote->sendln("ssh $server");
	sleep 1;
	
	#$remote->timeout('20s');
	$remote->expect_last('^chicks.*[$]$'); # at a prompt
#	$remote->expect_last("^chicks[\@]$server.*[\$]\$"); # at a prompt on the remote server
	# TODO: check if ssh is prompting
#        $remote->sendln('yes'); # for ssh host key,
#        sleep 3;
#        $remote->sendln($password);
#        sleep 8;

	# do something
#	$remote->sendln('mkdir .ssh; chmod 700 .ssh; cd .ssh;  wget https://raw.github.com/chicks-net/chicks-home/master/.ssh/authorized_keys; chmod 600 authorized_keys; ls -al; cd ..');

        # logout
#        sleep 1;
#        $remote->sendln('exit');
        sleep 1;
}


